<?xml version="1.0" encoding="UTF-8" ?>
<class name="MethodTweener" inherits="Tweener">
	<brief_description>
		Interpolates an abstract value and supplies it to a method called over time.
	</brief_description>
	<description>
		[MethodTweener] is similar to a combination of [CallbackTweener] and [PropertyTweener]. It calls a method providing an interpolated value as a parameter. See [method SceneTreeTween.tween_method] for more usage information.
		[b]Note:[/b] [method SceneTreeTween.tween_method] is the only correct way to create [MethodTweener]. Any [MethodTweener] created manually will not function correctly.
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="set_delay">
			<return type="MethodTweener" />
			<argument index="0" name="delay" type="float" />
			<description>
				Sets the time in seconds after which the [MethodTweener] will start interpolating. By default there's no delay.
			</description>
		</method>
		<method name="set_ease">
			<return type="MethodTweener" />
			<argument index="0" name="ease" type="int" enum="Tween.EaseType" />
			<description>
				Sets the type of used easing from [enum Tween.EaseType]. If not set, the default easing is used from the [SceneTreeTween] that contains this Tweener.
			</description>
		</method>
		<method name="set_trans">
			<return type="MethodTweener" />
			<argument index="0" name="trans" type="int" enum="Tween.TransitionType" />
			<description>
				Sets the type of used transition from [enum Tween.TransitionType]. If not set, the default transition is used from the [SceneTreeTween] that contains this Tweener.
			</description>
		</method>
	</methods>
	<constants>
	</constants>
</class>
