<?xml version="1.0" encoding="UTF-8" ?>
<class name="StaticBody2D" inherits="PhysicsBody2D">
	<brief_description>
		Physics body for 2D physics which is static or moves only by script. Useful for floor and walls.
	</brief_description>
	<description>
		Static body for 2D physics.
		A static body is a simple body that doesn't move under physics simulation, i.e. it can't be moved by external forces or contacts but its transformation can still be updated manually by the user. It is ideal for implementing objects in the environment, such as walls or platforms. In contrast to [RigidBody2D], it doesn't consume any CPU resources as long as they don't move.
		They have extra functionalities to move and affect other bodies:
		[b]Static transform change:[/b] Static bodies can be moved by animation or script. In this case, they are just teleported and don't affect other bodies on their path.
		[b]Constant velocity:[/b] When [member constant_linear_velocity] or [member constant_angular_velocity] is set, static bodies don't move themselves but affect touching bodies as if they were moving. This is useful for simulating conveyor belts or conveyor wheels.
	</description>
	<tutorials>
	</tutorials>
	<methods>
	</methods>
	<members>
		<member name="bounce" type="float" setter="set_bounce" getter="get_bounce">
			The body's bounciness. Values range from [code]0[/code] (no bounce) to [code]1[/code] (full bounciness).
			Deprecated, use [member PhysicsMaterial.bounce] instead via [member physics_material_override].
		</member>
		<member name="constant_angular_velocity" type="float" setter="set_constant_angular_velocity" getter="get_constant_angular_velocity" default="0.0">
			The body's constant angular velocity. This does not rotate the body, but affects colliding bodies, as if it were rotating.
		</member>
		<member name="constant_linear_velocity" type="Vector2" setter="set_constant_linear_velocity" getter="get_constant_linear_velocity" default="Vector2( 0, 0 )">
			The body's constant linear velocity. This does not move the body, but affects colliding bodies, as if it were moving.
		</member>
		<member name="friction" type="float" setter="set_friction" getter="get_friction">
			The body's friction. Values range from [code]0[/code] (no friction) to [code]1[/code] (full friction).
			Deprecated, use [member PhysicsMaterial.friction] instead via [member physics_material_override].
		</member>
		<member name="physics_material_override" type="PhysicsMaterial" setter="set_physics_material_override" getter="get_physics_material_override">
			The physics material override for the body.
			If a material is assigned to this property, it will be used instead of any other physics material, such as an inherited one.
		</member>
	</members>
	<constants>
	</constants>
</class>
