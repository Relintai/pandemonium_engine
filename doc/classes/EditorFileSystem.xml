<?xml version="1.0" encoding="UTF-8" ?>
<class name="EditorFileSystem" inherits="Node">
	<brief_description>
		Resource filesystem, as the editor sees it.
	</brief_description>
	<description>
		This object holds information of all resources in the filesystem, their types, etc.
		[b]Note:[/b] This class shouldn't be instantiated directly. Instead, access the singleton using [method EditorInterface.get_resource_filesystem].
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="get_file_type" qualifiers="const">
			<return type="String" />
			<argument index="0" name="path" type="String" />
			<description>
				Returns the resource type of the file, given the full path. This returns a string such as [code]"Resource"[/code] or [code]"GDScript"[/code], [i]not[/i] a file extension such as [code]".gd"[/code].
			</description>
		</method>
		<method name="get_filesystem">
			<return type="EditorFileSystemDirectory" />
			<description>
				Gets the root directory object.
			</description>
		</method>
		<method name="get_filesystem_path">
			<return type="EditorFileSystemDirectory" />
			<argument index="0" name="path" type="String" />
			<description>
				Returns a view into the filesystem at [code]path[/code].
			</description>
		</method>
		<method name="get_scanning_progress" qualifiers="const">
			<return type="float" />
			<description>
				Returns the scan progress for 0 to 1 if the FS is being scanned.
			</description>
		</method>
		<method name="is_scanning" qualifiers="const">
			<return type="bool" />
			<description>
				Returns [code]true[/code] of the filesystem is being scanned.
			</description>
		</method>
		<method name="scan">
			<return type="void" />
			<description>
				Scan the filesystem for changes.
			</description>
		</method>
		<method name="scan_sources">
			<return type="void" />
			<description>
				Check if the source of any imported resource changed.
			</description>
		</method>
		<method name="update_file">
			<return type="void" />
			<argument index="0" name="path" type="String" />
			<description>
				Update a file information. Call this if an external program (not Godot) modified the file.
			</description>
		</method>
		<method name="update_script_classes">
			<return type="void" />
			<description>
				Scans the script files and updates the list of custom class names.
			</description>
		</method>
	</methods>
	<signals>
		<signal name="filesystem_changed">
			<description>
				Emitted if the filesystem changed.
			</description>
		</signal>
		<signal name="resources_reimported">
			<argument index="0" name="resources" type="PoolStringArray" />
			<description>
				Emitted if a resource is reimported.
			</description>
		</signal>
		<signal name="resources_reload">
			<argument index="0" name="resources" type="PoolStringArray" />
			<description>
				Emitted if at least one resource is reloaded when the filesystem is scanned.
			</description>
		</signal>
		<signal name="sources_changed">
			<argument index="0" name="exist" type="bool" />
			<description>
				Emitted if the source of any imported file changed.
			</description>
		</signal>
	</signals>
	<constants>
	</constants>
</class>
