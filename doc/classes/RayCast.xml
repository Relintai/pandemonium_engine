<?xml version="1.0" encoding="UTF-8" ?>
<class name="RayCast" inherits="Spatial">
	<brief_description>
		Query the closest object intersecting a ray.
	</brief_description>
	<description>
		A RayCast represents a line from its origin to its destination position, [code]cast_to[/code]. It is used to query the 3D space in order to find the closest object along the path of the ray.
		RayCast can ignore some objects by adding them to the exception list via [code]add_exception[/code] or by setting proper filtering with collision layers and masks.
		RayCast can be configured to report collisions with [Area]s ([member collide_with_areas]) and/or [PhysicsBody]s ([member collide_with_bodies]).
		Only enabled raycasts will be able to query the space and report collisions.
		RayCast calculates intersection every physics frame (see [Node]), and the result is cached so it can be used later until the next frame. If multiple queries are required between physics frames (or during the same frame), use [method force_raycast_update] after adjusting the raycast.
	</description>
	<tutorials>
		<link title="Ray-casting">$DOCS_URL/tutorials/physics/ray-casting.md</link>
		<link title="3D Voxel Demo">https://godotengine.org/asset-library/asset/676</link>
	</tutorials>
	<methods>
		<method name="add_exception">
			<return type="void" />
			<argument index="0" name="node" type="Object" />
			<description>
				Adds a collision exception so the ray does not report collisions with the specified node.
			</description>
		</method>
		<method name="add_exception_rid">
			<return type="void" />
			<argument index="0" name="rid" type="RID" />
			<description>
				Adds a collision exception so the ray does not report collisions with the specified [RID].
			</description>
		</method>
		<method name="clear_exceptions">
			<return type="void" />
			<description>
				Removes all collision exceptions for this ray.
			</description>
		</method>
		<method name="force_raycast_update">
			<return type="void" />
			<description>
				Updates the collision information for the ray. Use this method to update the collision information immediately instead of waiting for the next [code]_physics_process[/code] call, for example if the ray or its parent has changed state.
				[b]Note:[/b] [code]enabled[/code] is not required for this to work.
			</description>
		</method>
		<method name="get_collider" qualifiers="const">
			<return type="Object" />
			<description>
				Returns the first object that the ray intersects, or [code]null[/code] if no object is intersecting the ray (i.e. [method is_colliding] returns [code]false[/code]).
			</description>
		</method>
		<method name="get_collider_shape" qualifiers="const">
			<return type="int" />
			<description>
				Returns the shape ID of the first object that the ray intersects, or [code]0[/code] if no object is intersecting the ray (i.e. [method is_colliding] returns [code]false[/code]).
			</description>
		</method>
		<method name="get_collision_mask_bit" qualifiers="const">
			<return type="bool" />
			<argument index="0" name="bit" type="int" />
			<description>
				Returns [code]true[/code] if the bit index passed is turned on.
				[b]Note:[/b] Bit indices range from 0-19.
			</description>
		</method>
		<method name="get_collision_normal" qualifiers="const">
			<return type="Vector3" />
			<description>
				Returns the normal of the intersecting object's shape at the collision point.
			</description>
		</method>
		<method name="get_collision_point" qualifiers="const">
			<return type="Vector3" />
			<description>
				Returns the collision point at which the ray intersects the closest object.
				[b]Note:[/b] This point is in the [b]global[/b] coordinate system.
			</description>
		</method>
		<method name="is_colliding" qualifiers="const">
			<return type="bool" />
			<description>
				Returns whether any object is intersecting with the ray's vector (considering the vector length).
			</description>
		</method>
		<method name="remove_exception">
			<return type="void" />
			<argument index="0" name="node" type="Object" />
			<description>
				Removes a collision exception so the ray does report collisions with the specified node.
			</description>
		</method>
		<method name="remove_exception_rid">
			<return type="void" />
			<argument index="0" name="rid" type="RID" />
			<description>
				Removes a collision exception so the ray does report collisions with the specified [RID].
			</description>
		</method>
		<method name="set_collision_mask_bit">
			<return type="void" />
			<argument index="0" name="bit" type="int" />
			<argument index="1" name="value" type="bool" />
			<description>
				Sets the bit index passed to the [code]value[/code] passed.
				[b]Note:[/b] Bit indexes range from 0-19.
			</description>
		</method>
	</methods>
	<members>
		<member name="cast_to" type="Vector3" setter="set_cast_to" getter="get_cast_to" default="Vector3( 0, -1, 0 )">
			The ray's destination point, relative to the RayCast's [code]position[/code].
		</member>
		<member name="collide_with_areas" type="bool" setter="set_collide_with_areas" getter="is_collide_with_areas_enabled" default="false">
			If [code]true[/code], collision with [Area]s will be reported.
		</member>
		<member name="collide_with_bodies" type="bool" setter="set_collide_with_bodies" getter="is_collide_with_bodies_enabled" default="true">
			If [code]true[/code], collision with [PhysicsBody]s will be reported.
		</member>
		<member name="collision_mask" type="int" setter="set_collision_mask" getter="get_collision_mask" default="1">
			The ray's collision mask. Only objects in at least one collision layer enabled in the mask will be detected. See [url=$DOCS_URL/tutorials/physics/physics_introduction.html#collision-layers-and-masks]Collision layers and masks[/url] in the documentation for more information.
		</member>
		<member name="debug_shape_custom_color" type="Color" setter="set_debug_shape_custom_color" getter="get_debug_shape_custom_color" default="Color( 0, 0, 0, 1 )">
			The custom color to use to draw the shape in the editor and at run-time if [b]Visible Collision Shapes[/b] is enabled in the [b]Debug[/b] menu. This color will be highlighted at run-time if the [RayCast] is colliding with something.
			If set to [code]Color(0.0, 0.0, 0.0)[/code] (by default), the color set in [member ProjectSettings.debug/shapes/collision/shape_color] is used.
		</member>
		<member name="debug_shape_thickness" type="int" setter="set_debug_shape_thickness" getter="get_debug_shape_thickness" default="2">
			If set to [code]1[/code], a line is used as the debug shape. Otherwise, a truncated pyramid is drawn to represent the [RayCast]. Requires [b]Visible Collision Shapes[/b] to be enabled in the [b]Debug[/b] menu for the debug shape to be visible at run-time.
		</member>
		<member name="enabled" type="bool" setter="set_enabled" getter="is_enabled" default="false">
			If [code]true[/code], collisions will be reported.
		</member>
		<member name="exclude_parent" type="bool" setter="set_exclude_parent_body" getter="get_exclude_parent_body" default="true">
			If [code]true[/code], collisions will be ignored for this RayCast's immediate parent.
		</member>
	</members>
	<constants>
	</constants>
</class>
