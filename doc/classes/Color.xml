<?xml version="1.0" encoding="UTF-8" ?>
<class name="Color">
	<brief_description>
		Color in RGBA format using floats on the range of 0 to 1.
	</brief_description>
	<description>
		A color represented by red, green, blue, and alpha (RGBA) components. The alpha component is often used for opacity. Values are in floating-point and usually range from 0 to 1. Some properties (such as CanvasItem.modulate) may accept values greater than 1 (overbright or HDR colors).
		You can also create a color from standardized color names by using [method @GDScript.ColorN] or directly using the color constants defined here. The standardized color set is based on the [url=https://en.wikipedia.org/wiki/X11_color_names]X11 color names[/url].
		If you want to supply values in a range of 0 to 255, you should use [method @GDScript.Color8].
		[b]Note:[/b] In a boolean context, a Color will evaluate to [code]false[/code] if it's equal to [code]Color(0, 0, 0, 1)[/code] (opaque black). Otherwise, a Color will always evaluate to [code]true[/code].
		[url=https://raw.githubusercontent.com/godotengine/godot-docs/master/img/color_constants.png]Color constants cheatsheet[/url]
	</description>
	<tutorials>
		<link title="2D GD Paint Demo">https://godotengine.org/asset-library/asset/517</link>
		<link title="Tween Demo">https://godotengine.org/asset-library/asset/146</link>
		<link title="GUI Drag And Drop Demo">https://godotengine.org/asset-library/asset/133</link>
	</tutorials>
	<methods>
		<method name="Color">
			<return type="Color" />
			<argument index="0" name="from" type="String" />
			<description>
				Constructs a color from an HTML hexadecimal color string in ARGB or RGB format. See also [method @GDScript.ColorN].
				[codeblock]
				# Each of the following creates the same color RGBA(178, 217, 10, 255).
				var c1 = Color("#ffb2d90a") # ARGB format with "#".
				var c2 = Color("ffb2d90a") # ARGB format.
				var c3 = Color("#b2d90a") # RGB format with "#".
				var c4 = Color("b2d90a") # RGB format.
				[/codeblock]
			</description>
		</method>
		<method name="Color">
			<return type="Color" />
			<argument index="0" name="from" type="int" />
			<description>
				Constructs a color from a 32-bit integer in RGBA format (each byte represents a color channel).
				[codeblock]
				var c = Color(274) # Similar to Color(0.0, 0.0, 0.004, 0.07)
				[/codeblock]
			</description>
		</method>
		<method name="Color">
			<return type="Color" />
			<argument index="0" name="from" type="Color" />
			<argument index="1" name="alpha" type="float" />
			<description>
				Constructs a color from the existing color, with [member a] set to the given [code]alpha[/code] value.
				[codeblock]
				var red = Color(Color.red, 0.2) # 20% opaque red.
				[/codeblock]
			</description>
		</method>
		<method name="Color">
			<return type="Color" />
			<argument index="0" name="r" type="float" />
			<argument index="1" name="g" type="float" />
			<argument index="2" name="b" type="float" />
			<description>
				Constructs a color from RGB values, typically between 0 and 1. Alpha will be 1.
				[codeblock]
				var color = Color(0.2, 1.0, 0.7) # Similar to Color8(51, 255, 178, 255)
				[/codeblock]
			</description>
		</method>
		<method name="Color">
			<return type="Color" />
			<argument index="0" name="r" type="float" />
			<argument index="1" name="g" type="float" />
			<argument index="2" name="b" type="float" />
			<argument index="3" name="a" type="float" />
			<description>
				Constructs a color from RGBA values, typically between 0 and 1.
				[codeblock]
				var color = Color(0.2, 1.0, 0.7, 0.8) # Similar to Color8(51, 255, 178, 204)
				[/codeblock]
			</description>
		</method>
		<method name="blend">
			<return type="Color" />
			<argument index="0" name="over" type="Color" />
			<description>
				Returns a new color resulting from blending this color over another. If the color is opaque, the result is also opaque. The second color may have a range of alpha values.
				[codeblock]
				var bg = Color(0.0, 1.0, 0.0, 0.5) # Green with alpha of 50%
				var fg = Color(1.0, 0.0, 0.0, 0.5) # Red with alpha of 50%
				var blended_color = bg.blend(fg) # Brown with alpha of 75%
				[/codeblock]
			</description>
		</method>
		<method name="clamp">
			<return type="Color" />
			<argument index="0" name="min" type="Color" default="Color( 0, 0, 0, 0 )" />
			<argument index="1" name="max" type="Color" default="Color( 1, 1, 1, 1 )" />
			<description>
			</description>
		</method>
		<method name="contrasted">
			<return type="Color" />
			<description>
				Returns the most contrasting color.
				[codeblock]
				var c = Color(0.3, 0.4, 0.9)
				var contrasted_color = c.contrasted() # Equivalent to RGBA(204, 229, 102, 255)
				[/codeblock]
			</description>
		</method>
		<method name="darkened">
			<return type="Color" />
			<argument index="0" name="amount" type="float" />
			<description>
				Returns a new color resulting from making this color darker by the specified percentage (ratio from 0 to 1).
				[codeblock]
				var green = Color(0.0, 1.0, 0.0)
				var darkgreen = green.darkened(0.2) # 20% darker than regular green
				[/codeblock]
			</description>
		</method>
		<method name="from_hsv">
			<return type="Color" />
			<argument index="0" name="h" type="float" />
			<argument index="1" name="s" type="float" />
			<argument index="2" name="v" type="float" />
			<argument index="3" name="a" type="float" default="1.0" />
			<description>
				Constructs a color from an HSV profile. [code]h[/code], [code]s[/code], and [code]v[/code] are values between 0 and 1.
				[codeblock]
				var c = Color.from_hsv(0.58, 0.5, 0.79, 0.8) # Equivalent to HSV(210, 50, 79, 0.8) or Color8(100, 151, 201, 0.8)
				[/codeblock]
			</description>
		</method>
		<method name="get_a8">
			<return type="int" />
			<description>
			</description>
		</method>
		<method name="get_b8">
			<return type="int" />
			<description>
			</description>
		</method>
		<method name="get_g8">
			<return type="int" />
			<description>
			</description>
		</method>
		<method name="get_h">
			<return type="float" />
			<description>
			</description>
		</method>
		<method name="get_luminance">
			<return type="float" />
			<description>
				Returns the luminance of the color in the [code][0.0, 1.0][/code] range.
				This is useful when determining light or dark color. Colors with a luminance smaller than 0.5 can be generally considered dark.
			</description>
		</method>
		<method name="get_r8">
			<return type="int" />
			<description>
			</description>
		</method>
		<method name="get_s">
			<return type="float" />
			<description>
			</description>
		</method>
		<method name="get_v">
			<return type="float" />
			<description>
			</description>
		</method>
		<method name="gray">
			<return type="float" />
			<description>
				Returns the color's grayscale representation.
				The gray value is calculated as [code](r + g + b) / 3[/code].
				[codeblock]
				var c = Color(0.2, 0.45, 0.82)
				var gray = c.gray() # A value of 0.466667
				[/codeblock]
			</description>
		</method>
		<method name="invert">
			<description>
			</description>
		</method>
		<method name="inverted">
			<return type="Color" />
			<description>
				Returns the inverted color [code](1 - r, 1 - g, 1 - b, a)[/code].
				[codeblock]
				var color = Color(0.3, 0.4, 0.9)
				var inverted_color = color.inverted() # Equivalent to Color(0.7, 0.6, 0.1)
				[/codeblock]
			</description>
		</method>
		<method name="is_equal_approx">
			<return type="bool" />
			<argument index="0" name="color" type="Color" />
			<description>
				Returns [code]true[/code] if this color and [code]color[/code] are approximately equal, by running [method @GDScript.is_equal_approx] on each component.
			</description>
		</method>
		<method name="lightened">
			<return type="Color" />
			<argument index="0" name="amount" type="float" />
			<description>
				Returns a new color resulting from making this color lighter by the specified percentage (ratio from 0 to 1).
				[codeblock]
				var green = Color(0.0, 1.0, 0.0)
				var lightgreen = green.lightened(0.2) # 20% lighter than regular green
				[/codeblock]
			</description>
		</method>
		<method name="linear_interpolate">
			<return type="Color" />
			<argument index="0" name="to" type="Color" />
			<argument index="1" name="weight" type="float" />
			<description>
				Returns the linear interpolation with another color. The interpolation factor [code]weight[/code] is between 0 and 1.
				[codeblock]
				var c1 = Color(1.0, 0.0, 0.0)
				var c2 = Color(0.0, 1.0, 0.0)
				var li_c = c1.linear_interpolate(c2, 0.5) # Equivalent to Color(0.5, 0.5, 0.0)
				[/codeblock]
			</description>
		</method>
		<method name="set_a8">
			<argument index="0" name="a" type="int" />
			<description>
			</description>
		</method>
		<method name="set_b8">
			<argument index="0" name="b" type="int" />
			<description>
			</description>
		</method>
		<method name="set_g8">
			<argument index="0" name="g" type="int" />
			<description>
			</description>
		</method>
		<method name="set_h">
			<argument index="0" name="h" type="int" />
			<description>
			</description>
		</method>
		<method name="set_hsv">
			<argument index="0" name="h" type="float" />
			<argument index="1" name="s" type="float" />
			<argument index="2" name="v" type="float" />
			<argument index="3" name="a" type="float" default="1.0" />
			<description>
			</description>
		</method>
		<method name="set_r8">
			<argument index="0" name="r" type="int" />
			<description>
			</description>
		</method>
		<method name="set_s">
			<argument index="0" name="s" type="int" />
			<description>
			</description>
		</method>
		<method name="set_v">
			<argument index="0" name="v" type="int" />
			<description>
			</description>
		</method>
		<method name="to_abgr32">
			<return type="int" />
			<description>
				Returns the color converted to a 32-bit integer in ABGR format (each byte represents a color channel). ABGR is the reversed version of the default format.
				[codeblock]
				var color = Color(1, 0.5, 0.2)
				print(color.to_abgr32()) # Prints 4281565439
				[/codeblock]
			</description>
		</method>
		<method name="to_abgr64">
			<return type="int" />
			<description>
				Returns the color converted to a 64-bit integer in ABGR format (each word represents a color channel). ABGR is the reversed version of the default format.
				[codeblock]
				var color = Color(1, 0.5, 0.2)
				print(color.to_abgr64()) # Prints -225178692812801
				[/codeblock]
			</description>
		</method>
		<method name="to_argb32">
			<return type="int" />
			<description>
				Returns the color converted to a 32-bit integer in ARGB format (each byte represents a color channel). ARGB is more compatible with DirectX.
				[codeblock]
				var color = Color(1, 0.5, 0.2)
				print(color.to_argb32()) # Prints 4294934323
				[/codeblock]
			</description>
		</method>
		<method name="to_argb64">
			<return type="int" />
			<description>
				Returns the color converted to a 64-bit integer in ARGB format (each word represents a color channel). ARGB is more compatible with DirectX.
				[codeblock]
				var color = Color(1, 0.5, 0.2)
				print(color.to_argb64()) # Prints -2147470541
				[/codeblock]
			</description>
		</method>
		<method name="to_html">
			<return type="String" />
			<argument index="0" name="with_alpha" type="bool" default="true" />
			<description>
				Returns the color's HTML hexadecimal color string in ARGB format (ex: [code]ff34f822[/code]).
				Setting [code]with_alpha[/code] to [code]false[/code] excludes alpha from the hexadecimal string.
				[codeblock]
				var c = Color(1, 1, 1, 0.5)
				var s1 = c.to_html() # Returns "7fffffff"
				var s2 = c.to_html(false) # Returns "ffffff"
				[/codeblock]
			</description>
		</method>
		<method name="to_linear">
			<return type="Color" />
			<description>
			</description>
		</method>
		<method name="to_rgba32">
			<return type="int" />
			<description>
				Returns the color converted to a 32-bit integer in RGBA format (each byte represents a color channel). RGBA is Godot's default format.
				[codeblock]
				var color = Color(1, 0.5, 0.2)
				print(color.to_rgba32()) # Prints 4286526463
				[/codeblock]
			</description>
		</method>
		<method name="to_rgba64">
			<return type="int" />
			<description>
				Returns the color converted to a 64-bit integer in RGBA format (each word represents a color channel). RGBA is Godot's default format.
				[codeblock]
				var color = Color(1, 0.5, 0.2)
				print(color.to_rgba64()) # Prints -140736629309441
				[/codeblock]
			</description>
		</method>
		<method name="to_rgbe9995">
			<return type="int" />
			<description>
			</description>
		</method>
		<method name="to_srgb">
			<return type="Color" />
			<description>
			</description>
		</method>
	</methods>
	<members>
		<member name="a" type="float" setter="" getter="" default="1.0">
			The color's alpha component, typically on the range of 0 to 1. A value of 0 means that the color is fully transparent. A value of 1 means that the color is fully opaque.
		</member>
		<member name="a8" type="int" setter="" getter="" default="255">
			Wrapper for [member a] that uses the range 0 to 255 instead of 0 to 1.
		</member>
		<member name="b" type="float" setter="" getter="" default="0.0">
			The color's blue component, typically on the range of 0 to 1.
		</member>
		<member name="b8" type="int" setter="" getter="" default="0">
			Wrapper for [member b] that uses the range 0 to 255 instead of 0 to 1.
		</member>
		<member name="g" type="float" setter="" getter="" default="0.0">
			The color's green component, typically on the range of 0 to 1.
		</member>
		<member name="g8" type="int" setter="" getter="" default="0">
			Wrapper for [member g] that uses the range 0 to 255 instead of 0 to 1.
		</member>
		<member name="h" type="float" setter="" getter="" default="0.0">
			The HSV hue of this color, on the range 0 to 1.
		</member>
		<member name="r" type="float" setter="" getter="" default="0.0">
			The color's red component, typically on the range of 0 to 1.
		</member>
		<member name="r8" type="int" setter="" getter="" default="0">
			Wrapper for [member r] that uses the range 0 to 255 instead of 0 to 1.
		</member>
		<member name="s" type="float" setter="" getter="" default="0.0">
			The HSV saturation of this color, on the range 0 to 1.
		</member>
		<member name="v" type="float" setter="" getter="" default="0.0">
			The HSV value (brightness) of this color, on the range 0 to 1.
		</member>
	</members>
	<constants>
		<constant name="aliceblue" value="Color( 0.94, 0.97, 1, 1 )">
			Alice blue color.
		</constant>
		<constant name="antiquewhite" value="Color( 0.98, 0.92, 0.84, 1 )">
			Antique white color.
		</constant>
		<constant name="aqua" value="Color( 0, 1, 1, 1 )">
			Aqua color.
		</constant>
		<constant name="aquamarine" value="Color( 0.5, 1, 0.83, 1 )">
			Aquamarine color.
		</constant>
		<constant name="azure" value="Color( 0.94, 1, 1, 1 )">
			Azure color.
		</constant>
		<constant name="beige" value="Color( 0.96, 0.96, 0.86, 1 )">
			Beige color.
		</constant>
		<constant name="bisque" value="Color( 1, 0.89, 0.77, 1 )">
			Bisque color.
		</constant>
		<constant name="black" value="Color( 0, 0, 0, 1 )">
			Black color.
		</constant>
		<constant name="blanchedalmond" value="Color( 1, 0.92, 0.8, 1 )">
			Blanche almond color.
		</constant>
		<constant name="blue" value="Color( 0, 0, 1, 1 )">
			Blue color.
		</constant>
		<constant name="blueviolet" value="Color( 0.54, 0.17, 0.89, 1 )">
			Blue violet color.
		</constant>
		<constant name="brown" value="Color( 0.65, 0.16, 0.16, 1 )">
			Brown color.
		</constant>
		<constant name="burlywood" value="Color( 0.87, 0.72, 0.53, 1 )">
			Burly wood color.
		</constant>
		<constant name="cadetblue" value="Color( 0.37, 0.62, 0.63, 1 )">
			Cadet blue color.
		</constant>
		<constant name="chartreuse" value="Color( 0.5, 1, 0, 1 )">
			Chartreuse color.
		</constant>
		<constant name="chocolate" value="Color( 0.82, 0.41, 0.12, 1 )">
			Chocolate color.
		</constant>
		<constant name="coral" value="Color( 1, 0.5, 0.31, 1 )">
			Coral color.
		</constant>
		<constant name="cornflower" value="Color( 0.39, 0.58, 0.93, 1 )">
			Cornflower color.
		</constant>
		<constant name="cornsilk" value="Color( 1, 0.97, 0.86, 1 )">
			Corn silk color.
		</constant>
		<constant name="crimson" value="Color( 0.86, 0.08, 0.24, 1 )">
			Crimson color.
		</constant>
		<constant name="cyan" value="Color( 0, 1, 1, 1 )">
			Cyan color.
		</constant>
		<constant name="darkblue" value="Color( 0, 0, 0.55, 1 )">
			Dark blue color.
		</constant>
		<constant name="darkcyan" value="Color( 0, 0.55, 0.55, 1 )">
			Dark cyan color.
		</constant>
		<constant name="darkgoldenrod" value="Color( 0.72, 0.53, 0.04, 1 )">
			Dark goldenrod color.
		</constant>
		<constant name="darkgray" value="Color( 0.66, 0.66, 0.66, 1 )">
			Dark gray color.
		</constant>
		<constant name="darkgreen" value="Color( 0, 0.39, 0, 1 )">
			Dark green color.
		</constant>
		<constant name="darkkhaki" value="Color( 0.74, 0.72, 0.42, 1 )">
			Dark khaki color.
		</constant>
		<constant name="darkmagenta" value="Color( 0.55, 0, 0.55, 1 )">
			Dark magenta color.
		</constant>
		<constant name="darkolivegreen" value="Color( 0.33, 0.42, 0.18, 1 )">
			Dark olive green color.
		</constant>
		<constant name="darkorange" value="Color( 1, 0.55, 0, 1 )">
			Dark orange color.
		</constant>
		<constant name="darkorchid" value="Color( 0.6, 0.2, 0.8, 1 )">
			Dark orchid color.
		</constant>
		<constant name="darkred" value="Color( 0.55, 0, 0, 1 )">
			Dark red color.
		</constant>
		<constant name="darksalmon" value="Color( 0.91, 0.59, 0.48, 1 )">
			Dark salmon color.
		</constant>
		<constant name="darkseagreen" value="Color( 0.56, 0.74, 0.56, 1 )">
			Dark sea green color.
		</constant>
		<constant name="darkslateblue" value="Color( 0.28, 0.24, 0.55, 1 )">
			Dark slate blue color.
		</constant>
		<constant name="darkslategray" value="Color( 0.18, 0.31, 0.31, 1 )">
			Dark slate gray color.
		</constant>
		<constant name="darkturquoise" value="Color( 0, 0.81, 0.82, 1 )">
			Dark turquoise color.
		</constant>
		<constant name="darkviolet" value="Color( 0.58, 0, 0.83, 1 )">
			Dark violet color.
		</constant>
		<constant name="deeppink" value="Color( 1, 0.08, 0.58, 1 )">
			Deep pink color.
		</constant>
		<constant name="deepskyblue" value="Color( 0, 0.75, 1, 1 )">
			Deep sky blue color.
		</constant>
		<constant name="dimgray" value="Color( 0.41, 0.41, 0.41, 1 )">
			Dim gray color.
		</constant>
		<constant name="dodgerblue" value="Color( 0.12, 0.56, 1, 1 )">
			Dodger blue color.
		</constant>
		<constant name="firebrick" value="Color( 0.7, 0.13, 0.13, 1 )">
			Firebrick color.
		</constant>
		<constant name="floralwhite" value="Color( 1, 0.98, 0.94, 1 )">
			Floral white color.
		</constant>
		<constant name="forestgreen" value="Color( 0.13, 0.55, 0.13, 1 )">
			Forest green color.
		</constant>
		<constant name="fuchsia" value="Color( 1, 0, 1, 1 )">
			Fuchsia color.
		</constant>
		<constant name="gainsboro" value="Color( 0.86, 0.86, 0.86, 1 )">
			Gainsboro color.
		</constant>
		<constant name="ghostwhite" value="Color( 0.97, 0.97, 1, 1 )">
			Ghost white color.
		</constant>
		<constant name="gold" value="Color( 1, 0.84, 0, 1 )">
			Gold color.
		</constant>
		<constant name="goldenrod" value="Color( 0.85, 0.65, 0.13, 1 )">
			Goldenrod color.
		</constant>
		<constant name="gray" value="Color( 0.75, 0.75, 0.75, 1 )">
			Gray color.
		</constant>
		<constant name="green" value="Color( 0, 1, 0, 1 )">
			Green color.
		</constant>
		<constant name="greenyellow" value="Color( 0.68, 1, 0.18, 1 )">
			Green yellow color.
		</constant>
		<constant name="honeydew" value="Color( 0.94, 1, 0.94, 1 )">
			Honeydew color.
		</constant>
		<constant name="hotpink" value="Color( 1, 0.41, 0.71, 1 )">
			Hot pink color.
		</constant>
		<constant name="indianred" value="Color( 0.8, 0.36, 0.36, 1 )">
			Indian red color.
		</constant>
		<constant name="indigo" value="Color( 0.29, 0, 0.51, 1 )">
			Indigo color.
		</constant>
		<constant name="ivory" value="Color( 1, 1, 0.94, 1 )">
			Ivory color.
		</constant>
		<constant name="khaki" value="Color( 0.94, 0.9, 0.55, 1 )">
			Khaki color.
		</constant>
		<constant name="lavender" value="Color( 0.9, 0.9, 0.98, 1 )">
			Lavender color.
		</constant>
		<constant name="lavenderblush" value="Color( 1, 0.94, 0.96, 1 )">
			Lavender blush color.
		</constant>
		<constant name="lawngreen" value="Color( 0.49, 0.99, 0, 1 )">
			Lawn green color.
		</constant>
		<constant name="lemonchiffon" value="Color( 1, 0.98, 0.8, 1 )">
			Lemon chiffon color.
		</constant>
		<constant name="lightblue" value="Color( 0.68, 0.85, 0.9, 1 )">
			Light blue color.
		</constant>
		<constant name="lightcoral" value="Color( 0.94, 0.5, 0.5, 1 )">
			Light coral color.
		</constant>
		<constant name="lightcyan" value="Color( 0.88, 1, 1, 1 )">
			Light cyan color.
		</constant>
		<constant name="lightgoldenrod" value="Color( 0.98, 0.98, 0.82, 1 )">
			Light goldenrod color.
		</constant>
		<constant name="lightgray" value="Color( 0.83, 0.83, 0.83, 1 )">
			Light gray color.
		</constant>
		<constant name="lightgreen" value="Color( 0.56, 0.93, 0.56, 1 )">
			Light green color.
		</constant>
		<constant name="lightpink" value="Color( 1, 0.71, 0.76, 1 )">
			Light pink color.
		</constant>
		<constant name="lightsalmon" value="Color( 1, 0.63, 0.48, 1 )">
			Light salmon color.
		</constant>
		<constant name="lightseagreen" value="Color( 0.13, 0.7, 0.67, 1 )">
			Light sea green color.
		</constant>
		<constant name="lightskyblue" value="Color( 0.53, 0.81, 0.98, 1 )">
			Light sky blue color.
		</constant>
		<constant name="lightslategray" value="Color( 0.47, 0.53, 0.6, 1 )">
			Light slate gray color.
		</constant>
		<constant name="lightsteelblue" value="Color( 0.69, 0.77, 0.87, 1 )">
			Light steel blue color.
		</constant>
		<constant name="lightyellow" value="Color( 1, 1, 0.88, 1 )">
			Light yellow color.
		</constant>
		<constant name="lime" value="Color( 0, 1, 0, 1 )">
			Lime color.
		</constant>
		<constant name="limegreen" value="Color( 0.2, 0.8, 0.2, 1 )">
			Lime green color.
		</constant>
		<constant name="linen" value="Color( 0.98, 0.94, 0.9, 1 )">
			Linen color.
		</constant>
		<constant name="magenta" value="Color( 1, 0, 1, 1 )">
			Magenta color.
		</constant>
		<constant name="maroon" value="Color( 0.69, 0.19, 0.38, 1 )">
			Maroon color.
		</constant>
		<constant name="mediumaquamarine" value="Color( 0.4, 0.8, 0.67, 1 )">
			Medium aquamarine color.
		</constant>
		<constant name="mediumblue" value="Color( 0, 0, 0.8, 1 )">
			Medium blue color.
		</constant>
		<constant name="mediumorchid" value="Color( 0.73, 0.33, 0.83, 1 )">
			Medium orchid color.
		</constant>
		<constant name="mediumpurple" value="Color( 0.58, 0.44, 0.86, 1 )">
			Medium purple color.
		</constant>
		<constant name="mediumseagreen" value="Color( 0.24, 0.7, 0.44, 1 )">
			Medium sea green color.
		</constant>
		<constant name="mediumslateblue" value="Color( 0.48, 0.41, 0.93, 1 )">
			Medium slate blue color.
		</constant>
		<constant name="mediumspringgreen" value="Color( 0, 0.98, 0.6, 1 )">
			Medium spring green color.
		</constant>
		<constant name="mediumturquoise" value="Color( 0.28, 0.82, 0.8, 1 )">
			Medium turquoise color.
		</constant>
		<constant name="mediumvioletred" value="Color( 0.78, 0.08, 0.52, 1 )">
			Medium violet red color.
		</constant>
		<constant name="midnightblue" value="Color( 0.1, 0.1, 0.44, 1 )">
			Midnight blue color.
		</constant>
		<constant name="mintcream" value="Color( 0.96, 1, 0.98, 1 )">
			Mint cream color.
		</constant>
		<constant name="mistyrose" value="Color( 1, 0.89, 0.88, 1 )">
			Misty rose color.
		</constant>
		<constant name="moccasin" value="Color( 1, 0.89, 0.71, 1 )">
			Moccasin color.
		</constant>
		<constant name="navajowhite" value="Color( 1, 0.87, 0.68, 1 )">
			Navajo white color.
		</constant>
		<constant name="navyblue" value="Color( 0, 0, 0.5, 1 )">
			Navy blue color.
		</constant>
		<constant name="oldlace" value="Color( 0.99, 0.96, 0.9, 1 )">
			Old lace color.
		</constant>
		<constant name="olive" value="Color( 0.5, 0.5, 0, 1 )">
			Olive color.
		</constant>
		<constant name="olivedrab" value="Color( 0.42, 0.56, 0.14, 1 )">
			Olive drab color.
		</constant>
		<constant name="orange" value="Color( 1, 0.65, 0, 1 )">
			Orange color.
		</constant>
		<constant name="orangered" value="Color( 1, 0.27, 0, 1 )">
			Orange red color.
		</constant>
		<constant name="orchid" value="Color( 0.85, 0.44, 0.84, 1 )">
			Orchid color.
		</constant>
		<constant name="palegoldenrod" value="Color( 0.93, 0.91, 0.67, 1 )">
			Pale goldenrod color.
		</constant>
		<constant name="palegreen" value="Color( 0.6, 0.98, 0.6, 1 )">
			Pale green color.
		</constant>
		<constant name="paleturquoise" value="Color( 0.69, 0.93, 0.93, 1 )">
			Pale turquoise color.
		</constant>
		<constant name="palevioletred" value="Color( 0.86, 0.44, 0.58, 1 )">
			Pale violet red color.
		</constant>
		<constant name="papayawhip" value="Color( 1, 0.94, 0.84, 1 )">
			Papaya whip color.
		</constant>
		<constant name="peachpuff" value="Color( 1, 0.85, 0.73, 1 )">
			Peach puff color.
		</constant>
		<constant name="peru" value="Color( 0.8, 0.52, 0.25, 1 )">
			Peru color.
		</constant>
		<constant name="pink" value="Color( 1, 0.75, 0.8, 1 )">
			Pink color.
		</constant>
		<constant name="plum" value="Color( 0.87, 0.63, 0.87, 1 )">
			Plum color.
		</constant>
		<constant name="powderblue" value="Color( 0.69, 0.88, 0.9, 1 )">
			Powder blue color.
		</constant>
		<constant name="purple" value="Color( 0.63, 0.13, 0.94, 1 )">
			Purple color.
		</constant>
		<constant name="rebeccapurple" value="Color( 0.4, 0.2, 0.6, 1 )">
			Rebecca purple color.
		</constant>
		<constant name="red" value="Color( 1, 0, 0, 1 )">
			Red color.
		</constant>
		<constant name="rosybrown" value="Color( 0.74, 0.56, 0.56, 1 )">
			Rosy brown color.
		</constant>
		<constant name="royalblue" value="Color( 0.25, 0.41, 0.88, 1 )">
			Royal blue color.
		</constant>
		<constant name="saddlebrown" value="Color( 0.55, 0.27, 0.07, 1 )">
			Saddle brown color.
		</constant>
		<constant name="salmon" value="Color( 0.98, 0.5, 0.45, 1 )">
			Salmon color.
		</constant>
		<constant name="sandybrown" value="Color( 0.96, 0.64, 0.38, 1 )">
			Sandy brown color.
		</constant>
		<constant name="seagreen" value="Color( 0.18, 0.55, 0.34, 1 )">
			Sea green color.
		</constant>
		<constant name="seashell" value="Color( 1, 0.96, 0.93, 1 )">
			Seashell color.
		</constant>
		<constant name="sienna" value="Color( 0.63, 0.32, 0.18, 1 )">
			Sienna color.
		</constant>
		<constant name="silver" value="Color( 0.75, 0.75, 0.75, 1 )">
			Silver color.
		</constant>
		<constant name="skyblue" value="Color( 0.53, 0.81, 0.92, 1 )">
			Sky blue color.
		</constant>
		<constant name="slateblue" value="Color( 0.42, 0.35, 0.8, 1 )">
			Slate blue color.
		</constant>
		<constant name="slategray" value="Color( 0.44, 0.5, 0.56, 1 )">
			Slate gray color.
		</constant>
		<constant name="snow" value="Color( 1, 0.98, 0.98, 1 )">
			Snow color.
		</constant>
		<constant name="springgreen" value="Color( 0, 1, 0.5, 1 )">
			Spring green color.
		</constant>
		<constant name="steelblue" value="Color( 0.27, 0.51, 0.71, 1 )">
			Steel blue color.
		</constant>
		<constant name="tan" value="Color( 0.82, 0.71, 0.55, 1 )">
			Tan color.
		</constant>
		<constant name="teal" value="Color( 0, 0.5, 0.5, 1 )">
			Teal color.
		</constant>
		<constant name="thistle" value="Color( 0.85, 0.75, 0.85, 1 )">
			Thistle color.
		</constant>
		<constant name="tomato" value="Color( 1, 0.39, 0.28, 1 )">
			Tomato color.
		</constant>
		<constant name="transparent" value="Color( 1, 1, 1, 0 )">
			Transparent color (white with no alpha).
		</constant>
		<constant name="turquoise" value="Color( 0.25, 0.88, 0.82, 1 )">
			Turquoise color.
		</constant>
		<constant name="violet" value="Color( 0.93, 0.51, 0.93, 1 )">
			Violet color.
		</constant>
		<constant name="webgray" value="Color( 0.5, 0.5, 0.5, 1 )">
			Web gray color.
		</constant>
		<constant name="webgreen" value="Color( 0, 0.5, 0, 1 )">
			Web green color.
		</constant>
		<constant name="webmaroon" value="Color( 0.5, 0, 0, 1 )">
			Web maroon color.
		</constant>
		<constant name="webpurple" value="Color( 0.5, 0, 0.5, 1 )">
			Web purple color.
		</constant>
		<constant name="wheat" value="Color( 0.96, 0.87, 0.7, 1 )">
			Wheat color.
		</constant>
		<constant name="white" value="Color( 1, 1, 1, 1 )">
			White color.
		</constant>
		<constant name="whitesmoke" value="Color( 0.96, 0.96, 0.96, 1 )">
			White smoke color.
		</constant>
		<constant name="yellow" value="Color( 1, 1, 0, 1 )">
			Yellow color.
		</constant>
		<constant name="yellowgreen" value="Color( 0.6, 0.8, 0.2, 1 )">
			Yellow green color.
		</constant>
	</constants>
</class>
