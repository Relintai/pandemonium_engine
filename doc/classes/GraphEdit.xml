<?xml version="1.0" encoding="UTF-8" ?>
<class name="GraphEdit" inherits="Control">
	<brief_description>
		GraphEdit is an area capable of showing various GraphNodes. It manages connection events between them.
	</brief_description>
	<description>
		GraphEdit manages the showing of GraphNodes it contains, as well as connections and disconnections between them. Signals are sent for each of these two events. Disconnection between GraphNode slots is disabled by default.
		It is greatly advised to enable low-processor usage mode (see [member OS.low_processor_usage_mode]) when using GraphEdits.
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="add_valid_connection_type">
			<return type="void" />
			<argument index="0" name="from_type" type="int" />
			<argument index="1" name="to_type" type="int" />
			<description>
				Makes possible the connection between two different slot types. The type is defined with the [method GraphNode.set_slot] method.
			</description>
		</method>
		<method name="add_valid_left_disconnect_type">
			<return type="void" />
			<argument index="0" name="type" type="int" />
			<description>
				Makes possible to disconnect nodes when dragging from the slot at the left if it has the specified type.
			</description>
		</method>
		<method name="add_valid_right_disconnect_type">
			<return type="void" />
			<argument index="0" name="type" type="int" />
			<description>
				Makes possible to disconnect nodes when dragging from the slot at the right if it has the specified type.
			</description>
		</method>
		<method name="clear_connections">
			<return type="void" />
			<description>
				Removes all connections between nodes.
			</description>
		</method>
		<method name="connect_node">
			<return type="int" enum="Error" />
			<argument index="0" name="from" type="StringName" />
			<argument index="1" name="from_port" type="int" />
			<argument index="2" name="to" type="StringName" />
			<argument index="3" name="to_port" type="int" />
			<description>
				Create a connection between the [code]from_port[/code] slot of the [code]from[/code] GraphNode and the [code]to_port[/code] slot of the [code]to[/code] GraphNode. If the connection already exists, no connection is created.
			</description>
		</method>
		<method name="disconnect_node">
			<return type="void" />
			<argument index="0" name="from" type="StringName" />
			<argument index="1" name="from_port" type="int" />
			<argument index="2" name="to" type="StringName" />
			<argument index="3" name="to_port" type="int" />
			<description>
				Removes the connection between the [code]from_port[/code] slot of the [code]from[/code] GraphNode and the [code]to_port[/code] slot of the [code]to[/code] GraphNode. If the connection does not exist, no connection is removed.
			</description>
		</method>
		<method name="get_connection_list" qualifiers="const">
			<return type="Array" />
			<description>
				Returns an Array containing the list of connections. A connection consists in a structure of the form [code]{ from_port: 0, from: "GraphNode name 0", to_port: 1, to: "GraphNode name 1" }[/code].
			</description>
		</method>
		<method name="get_zoom_hbox">
			<return type="HBoxContainer" />
			<description>
				Gets the [HBoxContainer] that contains the zooming and grid snap controls in the top left of the graph. You can use this method to reposition the toolbar or to add your own custom controls to it.
				[b]Warning:[/b] This is a required internal node, removing and freeing it may cause a crash. If you wish to hide it or any of its children, use their [member CanvasItem.visible] property.
			</description>
		</method>
		<method name="is_node_connected">
			<return type="bool" />
			<argument index="0" name="from" type="StringName" />
			<argument index="1" name="from_port" type="int" />
			<argument index="2" name="to" type="StringName" />
			<argument index="3" name="to_port" type="int" />
			<description>
				Returns [code]true[/code] if the [code]from_port[/code] slot of the [code]from[/code] GraphNode is connected to the [code]to_port[/code] slot of the [code]to[/code] GraphNode.
			</description>
		</method>
		<method name="is_valid_connection_type" qualifiers="const">
			<return type="bool" />
			<argument index="0" name="from_type" type="int" />
			<argument index="1" name="to_type" type="int" />
			<description>
				Returns whether it's possible to connect slots of the specified types.
			</description>
		</method>
		<method name="remove_valid_connection_type">
			<return type="void" />
			<argument index="0" name="from_type" type="int" />
			<argument index="1" name="to_type" type="int" />
			<description>
				Makes it not possible to connect between two different slot types. The type is defined with the [method GraphNode.set_slot] method.
			</description>
		</method>
		<method name="remove_valid_left_disconnect_type">
			<return type="void" />
			<argument index="0" name="type" type="int" />
			<description>
				Removes the possibility to disconnect nodes when dragging from the slot at the left if it has the specified type.
			</description>
		</method>
		<method name="remove_valid_right_disconnect_type">
			<return type="void" />
			<argument index="0" name="type" type="int" />
			<description>
				Removes the possibility to disconnect nodes when dragging from the slot at the right if it has the specified type.
			</description>
		</method>
		<method name="set_connection_activity">
			<return type="void" />
			<argument index="0" name="from" type="StringName" />
			<argument index="1" name="from_port" type="int" />
			<argument index="2" name="to" type="StringName" />
			<argument index="3" name="to_port" type="int" />
			<argument index="4" name="amount" type="float" />
			<description>
				Sets the coloration of the connection between [code]from[/code]'s [code]from_port[/code] and [code]to[/code]'s [code]to_port[/code] with the color provided in the [code]activity[/code] theme property.
			</description>
		</method>
		<method name="set_selected">
			<return type="void" />
			<argument index="0" name="node" type="Node" />
			<description>
				Sets the specified [code]node[/code] as the one selected.
			</description>
		</method>
	</methods>
	<members>
		<member name="focus_mode" type="int" setter="set_focus_mode" getter="get_focus_mode" overrides="Control" enum="Control.FocusMode" default="2" />
		<member name="minimap_enabled" type="bool" setter="set_minimap_enabled" getter="is_minimap_enabled" default="true">
			If [code]true[/code], the minimap is visible.
		</member>
		<member name="minimap_opacity" type="float" setter="set_minimap_opacity" getter="get_minimap_opacity" default="0.65">
			The opacity of the minimap rectangle.
		</member>
		<member name="minimap_size" type="Vector2" setter="set_minimap_size" getter="get_minimap_size" default="Vector2( 240, 160 )">
			The size of the minimap rectangle. The map itself is based on the size of the grid area and is scaled to fit this rectangle.
		</member>
		<member name="rect_clip_content" type="bool" setter="set_clip_contents" getter="is_clipping_contents" overrides="Control" default="true" />
		<member name="right_disconnects" type="bool" setter="set_right_disconnects" getter="is_right_disconnects_enabled" default="false">
			If [code]true[/code], enables disconnection of existing connections in the GraphEdit by dragging the right end.
		</member>
		<member name="scroll_offset" type="Vector2" setter="set_scroll_ofs" getter="get_scroll_ofs" default="Vector2( 0, 0 )">
			The scroll offset.
		</member>
		<member name="show_zoom_label" type="bool" setter="set_show_zoom_label" getter="is_showing_zoom_label" default="false">
			If [code]true[/code], makes a label with the current zoom level visible. The zoom value is displayed in percents.
		</member>
		<member name="snap_distance" type="int" setter="set_snap" getter="get_snap" default="20">
			The snapping distance in pixels.
		</member>
		<member name="use_snap" type="bool" setter="set_use_snap" getter="is_using_snap" default="true">
			If [code]true[/code], enables snapping.
		</member>
		<member name="zoom" type="float" setter="set_zoom" getter="get_zoom" default="1.0">
			The current zoom value.
		</member>
		<member name="zoom_max" type="float" setter="set_zoom_max" getter="get_zoom_max" default="2.0736">
			The upper zoom limit.
		</member>
		<member name="zoom_min" type="float" setter="set_zoom_min" getter="get_zoom_min" default="0.232568">
			The lower zoom limit.
		</member>
		<member name="zoom_step" type="float" setter="set_zoom_step" getter="get_zoom_step" default="1.2">
			The step of each zoom level.
		</member>
	</members>
	<signals>
		<signal name="_begin_node_move">
			<description>
				Emitted at the beginning of a GraphNode movement.
			</description>
		</signal>
		<signal name="_end_node_move">
			<description>
				Emitted at the end of a GraphNode movement.
			</description>
		</signal>
		<signal name="connection_from_empty">
			<argument index="0" name="to" type="StringName" />
			<argument index="1" name="to_slot" type="int" />
			<argument index="2" name="release_position" type="Vector2" />
			<description>
				Emitted when user dragging connection from input port into empty space of the graph.
			</description>
		</signal>
		<signal name="connection_request">
			<argument index="0" name="from" type="StringName" />
			<argument index="1" name="from_slot" type="int" />
			<argument index="2" name="to" type="String" />
			<argument index="3" name="to_slot" type="int" />
			<description>
				Emitted to the GraphEdit when the connection between the [code]from_slot[/code] slot of the [code]from[/code] GraphNode and the [code]to_slot[/code] slot of the [code]to[/code] GraphNode is attempted to be created.
			</description>
		</signal>
		<signal name="connection_to_empty">
			<argument index="0" name="from" type="StringName" />
			<argument index="1" name="from_slot" type="int" />
			<argument index="2" name="release_position" type="Vector2" />
			<description>
				Emitted when user dragging connection from output port into empty space of the graph.
			</description>
		</signal>
		<signal name="copy_nodes_request">
			<description>
				Emitted when the user presses [kbd]Ctrl + C[/kbd].
			</description>
		</signal>
		<signal name="delete_nodes_request">
			<argument index="0" name="nodes" type="Array" />
			<description>
				Emitted when a GraphNode is attempted to be removed from the GraphEdit. Provides a list of node names to be removed (all selected nodes, excluding nodes without closing button).
			</description>
		</signal>
		<signal name="disconnection_request">
			<argument index="0" name="from" type="StringName" />
			<argument index="1" name="from_slot" type="int" />
			<argument index="2" name="to" type="String" />
			<argument index="3" name="to_slot" type="int" />
			<description>
				Emitted to the GraphEdit when the connection between [code]from_slot[/code] slot of [code]from[/code] GraphNode and [code]to_slot[/code] slot of [code]to[/code] GraphNode is attempted to be removed.
			</description>
		</signal>
		<signal name="duplicate_nodes_request">
			<description>
				Emitted when a GraphNode is attempted to be duplicated in the GraphEdit.
			</description>
		</signal>
		<signal name="node_selected">
			<argument index="0" name="node" type="Node" />
			<description>
				Emitted when a GraphNode is selected.
			</description>
		</signal>
		<signal name="node_unselected">
			<argument index="0" name="node" type="Node" />
			<description>
			</description>
		</signal>
		<signal name="paste_nodes_request">
			<description>
				Emitted when the user presses [kbd]Ctrl + V[/kbd].
			</description>
		</signal>
		<signal name="popup_request">
			<argument index="0" name="position" type="Vector2" />
			<description>
				Emitted when a popup is requested. Happens on right-clicking in the GraphEdit. [code]position[/code] is the position of the mouse pointer when the signal is sent.
			</description>
		</signal>
		<signal name="scroll_offset_changed">
			<argument index="0" name="ofs" type="Vector2" />
			<description>
				Emitted when the scroll offset is changed by the user. It will not be emitted when changed in code.
			</description>
		</signal>
	</signals>
	<constants>
	</constants>
	<theme_items>
		<theme_item name="activity" data_type="color" type="Color" default="Color( 1, 1, 1, 1 )">
		</theme_item>
		<theme_item name="grid_major" data_type="color" type="Color" default="Color( 1, 1, 1, 0.2 )">
			Color of major grid lines.
		</theme_item>
		<theme_item name="grid_minor" data_type="color" type="Color" default="Color( 1, 1, 1, 0.05 )">
			Color of minor grid lines.
		</theme_item>
		<theme_item name="selection_fill" data_type="color" type="Color" default="Color( 1, 1, 1, 0.3 )">
			The fill color of the selection rectangle.
		</theme_item>
		<theme_item name="selection_stroke" data_type="color" type="Color" default="Color( 1, 1, 1, 0.8 )">
			The outline color of the selection rectangle.
		</theme_item>
		<theme_item name="bezier_len_neg" data_type="constant" type="int" default="160">
		</theme_item>
		<theme_item name="bezier_len_pos" data_type="constant" type="int" default="80">
		</theme_item>
		<theme_item name="port_grab_distance_horizontal" data_type="constant" type="int" default="24">
			The horizontal range within which a port can be grabbed (on both sides).
		</theme_item>
		<theme_item name="port_grab_distance_vertical" data_type="constant" type="int" default="26">
			The vertical range within which a port can be grabbed (on both sides).
		</theme_item>
		<theme_item name="minimap" data_type="icon" type="Texture">
		</theme_item>
		<theme_item name="minus" data_type="icon" type="Texture">
			The icon for the zoom out button.
		</theme_item>
		<theme_item name="more" data_type="icon" type="Texture">
			The icon for the zoom in button.
		</theme_item>
		<theme_item name="reset" data_type="icon" type="Texture">
			The icon for the zoom reset button.
		</theme_item>
		<theme_item name="snap" data_type="icon" type="Texture">
			The icon for the snap toggle button.
		</theme_item>
		<theme_item name="bg" data_type="style" type="StyleBox">
			The background drawn under the grid.
		</theme_item>
	</theme_items>
</class>
