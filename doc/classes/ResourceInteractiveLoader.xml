<?xml version="1.0" encoding="UTF-8" ?>
<class name="ResourceInteractiveLoader" inherits="Reference">
	<brief_description>
		Interactive [Resource] loader.
	</brief_description>
	<description>
		Interactive [Resource] loader. This object is returned by [ResourceLoader] when performing an interactive load. It allows loading resources with high granularity, which makes it mainly useful for displaying loading bars or percentages.
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="get_resource">
			<return type="Resource" />
			<description>
				Returns the loaded resource if the load operation completed successfully, [code]null[/code] otherwise.
			</description>
		</method>
		<method name="get_stage" qualifiers="const">
			<return type="int" />
			<description>
				Returns the load stage. The total amount of stages can be queried with [method get_stage_count].
			</description>
		</method>
		<method name="get_stage_count" qualifiers="const">
			<return type="int" />
			<description>
				Returns the total amount of stages (calls to [method poll]) needed to completely load this resource.
			</description>
		</method>
		<method name="poll">
			<return type="int" enum="Error" />
			<description>
				Polls the loading operation, i.e. loads a data chunk up to the next stage.
				Returns [constant OK] if the poll is successful but the load operation has not finished yet (intermediate stage). This means [method poll] will have to be called again until the last stage is completed.
				Returns [constant ERR_FILE_EOF] if the load operation has completed successfully. The loaded resource can be obtained by calling [method get_resource].
				Returns another [enum Error] code if the poll has failed.
			</description>
		</method>
		<method name="wait">
			<return type="int" enum="Error" />
			<description>
				Polls the loading operation successively until the resource is completely loaded or a [method poll] fails.
				Returns [constant ERR_FILE_EOF] if the load operation has completed successfully. The loaded resource can be obtained by calling [method get_resource].
				Returns another [enum Error] code if a poll has failed, aborting the operation.
			</description>
		</method>
	</methods>
	<members>
		<member name="no_subresource_cache" type="bool" setter="set_no_subresource_cache" getter="get_no_subresource_cache">
			Configures whether nested resources, if included, should not be cached.
		</member>
	</members>
	<constants>
	</constants>
</class>
