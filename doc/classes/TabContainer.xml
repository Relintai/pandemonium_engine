<?xml version="1.0" encoding="UTF-8" ?>
<class name="TabContainer" inherits="Container">
	<brief_description>
		Tabbed container.
	</brief_description>
	<description>
		Arranges [Control] children into a tabbed view, creating a tab for each one. The active tab's corresponding [Control] has its [code]visible[/code] property set to [code]true[/code], and all other children's to [code]false[/code].
		Ignores non-[Control] children.
		[b]Note:[/b] The drawing of the clickable tabs themselves is handled by this node. Adding [Tabs] as children is not needed.
	</description>
	<tutorials>
		<link title="GUI containers">$DOCS_URL/tutorials/ui/gui_containers.md</link>
	</tutorials>
	<methods>
		<method name="get_current_tab_control" qualifiers="const">
			<return type="Control" />
			<description>
				Returns the child [Control] node located at the active tab index.
			</description>
		</method>
		<method name="get_popup" qualifiers="const">
			<return type="Popup" />
			<description>
				Returns the [Popup] node instance if one has been set already with [method set_popup].
				[b]Warning:[/b] This is a required internal node, removing and freeing it may cause a crash. If you wish to hide it or any of its children, use their [member CanvasItem.visible] property.
			</description>
		</method>
		<method name="get_previous_tab" qualifiers="const">
			<return type="int" />
			<description>
				Returns the previously active tab index.
			</description>
		</method>
		<method name="get_tab_control" qualifiers="const">
			<return type="Control" />
			<argument index="0" name="tab_idx" type="int" />
			<description>
				Returns the [Control] node from the tab at index [code]tab_idx[/code].
			</description>
		</method>
		<method name="get_tab_count" qualifiers="const">
			<return type="int" />
			<description>
				Returns the number of tabs.
			</description>
		</method>
		<method name="get_tab_disabled" qualifiers="const">
			<return type="bool" />
			<argument index="0" name="tab_idx" type="int" />
			<description>
				Returns [code]true[/code] if the tab at index [code]tab_idx[/code] is disabled.
			</description>
		</method>
		<method name="get_tab_hidden" qualifiers="const">
			<return type="bool" />
			<argument index="0" name="tab_idx" type="int" />
			<description>
				Returns [code]true[/code] if the tab at index [code]tab_idx[/code] is hidden.
			</description>
		</method>
		<method name="get_tab_icon" qualifiers="const">
			<return type="Texture" />
			<argument index="0" name="tab_idx" type="int" />
			<description>
				Returns the [Texture] for the tab at index [code]tab_idx[/code] or [code]null[/code] if the tab has no [Texture].
			</description>
		</method>
		<method name="get_tab_idx_at_point" qualifiers="const">
			<return type="int" />
			<argument index="0" name="point" type="Vector2" />
			<description>
				Returns the index of the tab at local coordinates [code]point[/code]. Returns [code]-1[/code] if the point is outside the control boundaries or if there's no tab at the queried position.
			</description>
		</method>
		<method name="get_tab_metadata" qualifiers="const">
			<return type="Variant" />
			<argument index="0" name="tab_idx" type="int" />
			<description>
				Returns the metadata value set to the tab at index [code]tab_idx[/code]. If no metadata was previously set, returns [code]null[/code] by default.
			</description>
		</method>
		<method name="get_tab_title" qualifiers="const">
			<return type="String" />
			<argument index="0" name="tab_idx" type="int" />
			<description>
				Returns the title of the tab at index [code]tab_idx[/code]. Tab titles default to the name of the indexed child node, but this can be overridden with [method set_tab_title].
			</description>
		</method>
		<method name="get_tabs_rearrange_group" qualifiers="const">
			<return type="int" />
			<description>
				Returns the [TabContainer] rearrange group id.
			</description>
		</method>
		<method name="set_popup">
			<return type="void" />
			<argument index="0" name="popup" type="Node" />
			<description>
				If set on a [Popup] node instance, a popup menu icon appears in the top-right corner of the [TabContainer]. Clicking it will expand the [Popup] node.
			</description>
		</method>
		<method name="set_tab_disabled">
			<return type="void" />
			<argument index="0" name="tab_idx" type="int" />
			<argument index="1" name="disabled" type="bool" />
			<description>
				If [code]disabled[/code] is [code]true[/code], disables the tab at index [code]tab_idx[/code], making it non-interactable.
			</description>
		</method>
		<method name="set_tab_hidden">
			<return type="void" />
			<argument index="0" name="tab_idx" type="int" />
			<argument index="1" name="hidden" type="bool" />
			<description>
				If [code]hidden[/code] is [code]true[/code], hides the tab at index [code]tab_idx[/code], making it disappear from the tab area.
			</description>
		</method>
		<method name="set_tab_icon">
			<return type="void" />
			<argument index="0" name="tab_idx" type="int" />
			<argument index="1" name="icon" type="Texture" />
			<description>
				Sets an icon for the tab at index [code]tab_idx[/code].
			</description>
		</method>
		<method name="set_tab_metadata">
			<return type="void" />
			<argument index="0" name="tab_idx" type="int" />
			<argument index="1" name="metadata" type="Variant" />
			<description>
				Sets the metadata value for the tab at index [code]tab_idx[/code].
			</description>
		</method>
		<method name="set_tab_title">
			<return type="void" />
			<argument index="0" name="tab_idx" type="int" />
			<argument index="1" name="title" type="String" />
			<description>
				Sets a title for the tab at index [code]tab_idx[/code]. Tab titles default to the name of the indexed child node.
			</description>
		</method>
		<method name="set_tabs_rearrange_group">
			<return type="void" />
			<argument index="0" name="group_id" type="int" />
			<description>
				Defines rearrange group id, choose for each [TabContainer] the same value to enable tab drag between [TabContainer]. Enable drag with [member drag_to_rearrange_enabled].
			</description>
		</method>
	</methods>
	<members>
		<member name="all_tabs_in_front" type="bool" setter="set_all_tabs_in_front" getter="is_all_tabs_in_front" default="false">
			If [code]true[/code], all tabs are drawn in front of the panel. If [code]false[/code], inactive tabs are drawn behind the panel.
		</member>
		<member name="current_tab" type="int" setter="set_current_tab" getter="get_current_tab" default="0">
			The current tab index. When set, this index's [Control] node's [code]visible[/code] property is set to [code]true[/code] and all others are set to [code]false[/code].
		</member>
		<member name="drag_to_rearrange_enabled" type="bool" setter="set_drag_to_rearrange_enabled" getter="get_drag_to_rearrange_enabled" default="false">
			If [code]true[/code], tabs can be rearranged with mouse drag.
		</member>
		<member name="tab_align" type="int" setter="set_tab_align" getter="get_tab_align" enum="TabContainer.TabAlign" default="1">
			The alignment of all tabs in the tab container. See the [enum TabAlign] constants for details.
		</member>
		<member name="tabs_visible" type="bool" setter="set_tabs_visible" getter="are_tabs_visible" default="true">
			If [code]true[/code], tabs are visible. If [code]false[/code], tabs' content and titles are hidden.
		</member>
		<member name="use_hidden_tabs_for_min_size" type="bool" setter="set_use_hidden_tabs_for_min_size" getter="get_use_hidden_tabs_for_min_size" default="false">
			If [code]true[/code], children [Control] nodes that are hidden have their minimum size take into account in the total, instead of only the currently visible one.
		</member>
	</members>
	<signals>
		<signal name="pre_popup_pressed">
			<description>
				Emitted when the [TabContainer]'s [Popup] button is clicked. See [method set_popup] for details.
			</description>
		</signal>
		<signal name="tab_changed">
			<argument index="0" name="tab" type="int" />
			<description>
				Emitted when switching to another tab.
			</description>
		</signal>
		<signal name="tab_selected">
			<argument index="0" name="tab" type="int" />
			<description>
				Emitted when a tab is selected, even if it is the current tab.
			</description>
		</signal>
	</signals>
	<constants>
		<constant name="ALIGN_LEFT" value="0" enum="TabAlign">
			Align the tabs to the left.
		</constant>
		<constant name="ALIGN_CENTER" value="1" enum="TabAlign">
			Align the tabs to the center.
		</constant>
		<constant name="ALIGN_RIGHT" value="2" enum="TabAlign">
			Align the tabs to the right.
		</constant>
	</constants>
	<theme_items>
		<theme_item name="font_color_bg" data_type="color" type="Color" default="Color( 0.69, 0.69, 0.69, 1 )">
			Font color of inactive tabs.
		</theme_item>
		<theme_item name="font_color_disabled" data_type="color" type="Color" default="Color( 0.9, 0.9, 0.9, 0.2 )">
			Font color of disabled tabs.
		</theme_item>
		<theme_item name="font_color_fg" data_type="color" type="Color" default="Color( 0.94, 0.94, 0.94, 1 )">
			Font color of the currently selected tab.
		</theme_item>
		<theme_item name="hseparation" data_type="constant" type="int" default="4">
			Horizontal separation between tabs.
		</theme_item>
		<theme_item name="label_valign_bg" data_type="constant" type="int" default="2">
		</theme_item>
		<theme_item name="label_valign_fg" data_type="constant" type="int" default="0">
		</theme_item>
		<theme_item name="side_margin" data_type="constant" type="int" default="8">
			The space at the left and right edges of the tab bar.
		</theme_item>
		<theme_item name="top_margin" data_type="constant" type="int" default="24">
		</theme_item>
		<theme_item name="font" data_type="font" type="Font">
			The font used to draw tab names.
		</theme_item>
		<theme_item name="decrement" data_type="icon" type="Texture">
			Icon for the left arrow button that appears when there are too many tabs to fit in the container width. When the button is disabled (i.e. the first tab is visible), it appears semi-transparent.
		</theme_item>
		<theme_item name="decrement_highlight" data_type="icon" type="Texture">
			Icon for the left arrow button that appears when there are too many tabs to fit in the container width. Used when the button is being hovered with the cursor.
		</theme_item>
		<theme_item name="increment" data_type="icon" type="Texture">
			Icon for the right arrow button that appears when there are too many tabs to fit in the container width. When the button is disabled (i.e. the last tab is visible) it appears semi-transparent.
		</theme_item>
		<theme_item name="increment_highlight" data_type="icon" type="Texture">
			Icon for the right arrow button that appears when there are too many tabs to fit in the container width. Used when the button is being hovered with the cursor.
		</theme_item>
		<theme_item name="menu" data_type="icon" type="Texture">
			The icon for the menu button (see [method set_popup]).
		</theme_item>
		<theme_item name="menu_highlight" data_type="icon" type="Texture">
			The icon for the menu button (see [method set_popup]) when it's being hovered with the cursor.
		</theme_item>
		<theme_item name="panel" data_type="style" type="StyleBox">
			The style for the background fill.
		</theme_item>
		<theme_item name="tab_bg" data_type="style" type="StyleBox">
			The style of inactive tabs.
		</theme_item>
		<theme_item name="tab_disabled" data_type="style" type="StyleBox">
			The style of disabled tabs.
		</theme_item>
		<theme_item name="tab_fg" data_type="style" type="StyleBox">
			The style of the currently selected tab.
		</theme_item>
	</theme_items>
</class>
