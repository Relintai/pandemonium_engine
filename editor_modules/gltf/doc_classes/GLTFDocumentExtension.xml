<?xml version="1.0" encoding="UTF-8" ?>
<class name="GLTFDocumentExtension" inherits="Resource">
	<brief_description>
		[GLTFDocument] extension class.
	</brief_description>
	<description>
		Extends the functionality of the [GLTFDocument] class by allowing you to run arbitrary code at various stages of GLTF import or export.
		[b]Note:[/b] Like GLTFDocument itself, all GLTFDocumentExtension classes must be stateless in order to function properly. If you need to store data, use the [code]set_additional_data[/code] and [code]get_additional_data[/code] methods in [GLTFState] or [GLTFNode].
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="_convert_scene_node" qualifiers="virtual">
			<return type="void" />
			<argument index="0" name="state" type="GLTFState" />
			<argument index="1" name="gltf_node" type="GLTFNode" />
			<argument index="2" name="scene_node" type="Node" />
			<description>
				Part of the export process. This method is run after [method _export_preflight] and before [method _export_node].
				Runs when converting the data from a Godot scene node. This method can be used to process the Godot scene node data into a format that can be used by [method _export_node].
			</description>
		</method>
		<method name="_export_node" qualifiers="virtual">
			<return type="int" />
			<argument index="0" name="state" type="GLTFState" />
			<argument index="1" name="gltf_node" type="GLTFNode" />
			<argument index="2" name="json" type="Dictionary" />
			<argument index="3" name="node" type="Node" />
			<description>
				Part of the export process. This method is run after [method _convert_scene_node] and before [method _export_post].
				This method can be used to modify the final JSON of each node.
			</description>
		</method>
		<method name="_export_post" qualifiers="virtual">
			<return type="int" />
			<argument index="0" name="state" type="GLTFState" />
			<description>
				Part of the export process. This method is run last, after all other parts of the export process.
				This method can be used to modify the final JSON of the generated GLTF file.
			</description>
		</method>
		<method name="_export_preflight" qualifiers="virtual">
			<return type="int" />
			<argument index="0" name="state" type="GLTFState" />
			<argument index="1" name="root" type="Node" />
			<description>
				Part of the export process. This method is run first, before all other parts of the export process.
				The return value is used to determine if this [GLTFDocumentExtension] instance should be used for exporting a given GLTF file. If [constant OK], the export will use this [GLTFDocumentExtension] instance. If not overridden, [constant OK] is returned.
			</description>
		</method>
		<method name="_generate_scene_node" qualifiers="virtual">
			<return type="Object" />
			<argument index="0" name="state" type="GLTFState" />
			<argument index="1" name="gltf_node" type="GLTFNode" />
			<argument index="2" name="scene_parent" type="Node" />
			<description>
				Part of the import process. This method is run after [method _parse_node_extensions] and before [method _import_post_parse].
				Runs when generating a Godot scene node from a GLTFNode. The returned node will be added to the scene tree. Multiple nodes can be generated in this step if they are added as a child of the returned node.
			</description>
		</method>
		<method name="_get_supported_extensions" qualifiers="virtual">
			<return type="Array" />
			<description>
				Part of the import process. This method is run after [method _import_preflight] and before [method _parse_node_extensions].
				Returns an array of the GLTF extensions supported by this GLTFDocumentExtension class. This is used to validate if a GLTF file with required extensions can be loaded.
			</description>
		</method>
		<method name="_import_node" qualifiers="virtual">
			<return type="int" />
			<argument index="0" name="state" type="GLTFState" />
			<argument index="1" name="gltf_node" type="GLTFNode" />
			<argument index="2" name="json" type="Dictionary" />
			<argument index="3" name="node" type="Node" />
			<description>
				Part of the import process. This method is run after [method _import_post_parse] and before [method _import_post].
				This method can be used to make modifications to each of the generated Godot scene nodes.
			</description>
		</method>
		<method name="_import_post" qualifiers="virtual">
			<return type="int" />
			<argument index="0" name="state" type="GLTFState" />
			<argument index="1" name="root" type="Node" />
			<description>
				Part of the import process. This method is run last, after all other parts of the import process.
				This method can be used to modify the final Godot scene generated by the import process.
			</description>
		</method>
		<method name="_import_post_parse" qualifiers="virtual">
			<return type="int" />
			<argument index="0" name="state" type="GLTFState" />
			<description>
				Part of the import process. This method is run after [method _generate_scene_node] and before [method _import_node].
				This method can be used to modify any of the data imported so far, including any scene nodes, before running the final per-node import step.
			</description>
		</method>
		<method name="_import_preflight" qualifiers="virtual">
			<return type="int" />
			<argument index="0" name="state" type="GLTFState" />
			<argument index="1" name="extensions" type="PoolStringArray" />
			<description>
				Part of the import process. This method is run first, before all other parts of the import process.
				The return value is used to determine if this [GLTFDocumentExtension] instance should be used for importing a given GLTF file. If [constant OK], the import will use this [GLTFDocumentExtension] instance. If not overridden, [constant OK] is returned.
			</description>
		</method>
		<method name="_parse_node_extensions" qualifiers="virtual">
			<return type="int" />
			<argument index="0" name="state" type="GLTFState" />
			<argument index="1" name="gltf_node" type="GLTFNode" />
			<argument index="2" name="extensions" type="Dictionary" />
			<description>
				Part of the import process. This method is run after [method _get_supported_extensions] and before [method _generate_scene_node].
				Runs when parsing the node extensions of a GLTFNode. This method can be used to process the extension JSON data into a format that can be used by [method _generate_scene_node]. The return value should be a member of the [enum Error] enum.
			</description>
		</method>
	</methods>
	<constants>
	</constants>
</class>
