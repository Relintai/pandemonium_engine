<?xml version="1.0" encoding="UTF-8" ?>
<class name="SkeletonModification2DLookAt" inherits="SkeletonModification2D">
	<brief_description>
		A modification that rotates a [Bone2D] node to look at a target.
	</brief_description>
	<description>
		This [SkeletonModification2D] rotates a bone to look a target. This is extremely helpful for moving character's head to look at the player, rotating a turret to look at a target, or any other case where you want to make a bone rotate towards something quickly and easily.
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="get_additional_rotation" qualifiers="const">
			<return type="float" />
			<description>
				Returns the amount of additional rotation that is applied after the LookAt modification executes.
			</description>
		</method>
		<method name="get_constraint_angle_invert" qualifiers="const">
			<return type="bool" />
			<description>
				Returns whether the constraints to this modification are inverted or not.
			</description>
		</method>
		<method name="get_constraint_angle_max" qualifiers="const">
			<return type="float" />
			<description>
				Returns the constraint's maximum allowed angle.
			</description>
		</method>
		<method name="get_constraint_angle_min" qualifiers="const">
			<return type="float" />
			<description>
				Returns the constraint's minimum allowed angle.
			</description>
		</method>
		<method name="get_enable_constraint" qualifiers="const">
			<return type="bool" />
			<description>
				Returns [code]true[/code] if the LookAt modification is using constraints.
			</description>
		</method>
		<method name="set_additional_rotation">
			<return type="void" />
			<argument index="0" name="rotation" type="float" />
			<description>
			</description>
		</method>
		<method name="set_constraint_angle_invert">
			<return type="void" />
			<argument index="0" name="invert" type="bool" />
			<description>
			</description>
		</method>
		<method name="set_constraint_angle_max">
			<return type="void" />
			<argument index="0" name="angle_max" type="float" />
			<description>
			</description>
		</method>
		<method name="set_constraint_angle_min">
			<return type="void" />
			<argument index="0" name="angle_min" type="float" />
			<description>
			</description>
		</method>
		<method name="set_enable_constraint">
			<return type="void" />
			<argument index="0" name="enable_constraint" type="bool" />
			<description>
			</description>
		</method>
	</methods>
	<members>
		<member name="bone2d_node" type="NodePath" setter="set_bone2d_node" getter="get_bone2d_node" default="NodePath(&quot;&quot;)">
			The [Bone2D] node that the modification will operate on.
		</member>
		<member name="bone_index" type="int" setter="set_bone_index" getter="get_bone_index" default="-1">
			The index of the [Bone2D] node that the modification will oeprate on.
		</member>
		<member name="target_nodepath" type="NodePath" setter="set_target_node" getter="get_target_node" default="NodePath(&quot;&quot;)">
			The NodePath to the node that is the target for the LookAt modification. This node is what the modification will rotate the [Bone2D] to.
		</member>
	</members>
	<constants>
	</constants>
</class>
