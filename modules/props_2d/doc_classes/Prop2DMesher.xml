<?xml version="1.0" encoding="UTF-8" ?>
<class name="Prop2DMesher" inherits="Reference">
	<brief_description>
	</brief_description>
	<description>
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="_add_mesher" qualifiers="virtual">
			<return type="void" />
			<argument index="0" name="mesher" type="Prop2DMesher" />
			<description>
			</description>
		</method>
		<method name="add_color">
			<return type="void" />
			<argument index="0" name="color" type="Color" />
			<description>
			</description>
		</method>
		<method name="add_indices">
			<return type="void" />
			<argument index="0" name="indice" type="int" />
			<description>
			</description>
		</method>
		<method name="add_light">
			<return type="void" />
			<argument index="0" name="light" type="Prop2DLight" />
			<description>
			</description>
		</method>
		<method name="add_mesh_data_resource">
			<return type="void" />
			<argument index="0" name="mesh" type="MeshDataResource" />
			<argument index="1" name="position" type="Vector3" default="Vector3( 0, 0, 0 )" />
			<argument index="2" name="rotation" type="Vector3" default="Vector3( 0, 0, 0 )" />
			<argument index="3" name="scale" type="Vector3" default="Vector3( 1, 1, 1 )" />
			<argument index="4" name="uv_rect" type="Rect2" default="Rect2( 0, 0, 1, 1 )" />
			<description>
			</description>
		</method>
		<method name="add_mesh_data_resource_transform">
			<return type="void" />
			<argument index="0" name="mesh" type="MeshDataResource" />
			<argument index="1" name="transform" type="Transform" />
			<argument index="2" name="uv_rect" type="Rect2" default="Rect2( 0, 0, 1, 1 )" />
			<description>
			</description>
		</method>
		<method name="add_mesh_data_resource_transform_colored">
			<return type="void" />
			<argument index="0" name="mesh" type="MeshDataResource" />
			<argument index="1" name="transform" type="Transform" />
			<argument index="2" name="colors" type="PoolColorArray" />
			<argument index="3" name="uv_rect" type="Rect2" default="Rect2( 0, 0, 1, 1 )" />
			<description>
			</description>
		</method>
		<method name="add_mesher">
			<return type="void" />
			<argument index="0" name="mesher" type="Prop2DMesher" />
			<description>
			</description>
		</method>
		<method name="add_tiled_wall_mesh_rect_simple">
			<return type="void" />
			<argument index="0" name="x" type="int" />
			<argument index="1" name="y" type="int" />
			<argument index="2" name="transform" type="Transform2D" />
			<argument index="3" name="texture_rect" type="Rect2" />
			<argument index="4" name="arg4" type="Vector2" />
			<description>
			</description>
		</method>
		<method name="add_tiled_wall_simple">
			<return type="void" />
			<argument index="0" name="width" type="int" />
			<argument index="1" name="height" type="int" />
			<argument index="2" name="transform" type="Transform2D" />
			<argument index="3" name="tiled_wall_data" type="TiledWall2DData" />
			<argument index="4" name="cache" type="Prop2DMaterialCache" />
			<description>
			</description>
		</method>
		<method name="add_uv">
			<return type="void" />
			<argument index="0" name="uv" type="Vector2" />
			<description>
			</description>
		</method>
		<method name="add_vertex">
			<return type="void" />
			<argument index="0" name="vertex" type="Vector2" />
			<description>
			</description>
		</method>
		<method name="bake_colors">
			<return type="void" />
			<description>
			</description>
		</method>
		<method name="build_collider" qualifiers="const">
			<return type="PoolVector2Array" />
			<description>
			</description>
		</method>
		<method name="build_mesh">
			<return type="Array" />
			<description>
			</description>
		</method>
		<method name="build_mesh_into">
			<return type="void" />
			<argument index="0" name="mesh_rid" type="RID" />
			<description>
			</description>
		</method>
		<method name="clear_lights">
			<return type="void" />
			<description>
			</description>
		</method>
		<method name="generate_ao">
			<return type="void" />
			<description>
			</description>
		</method>
		<method name="get_color" qualifiers="const">
			<return type="Color" />
			<argument index="0" name="idx" type="int" />
			<description>
			</description>
		</method>
		<method name="get_colors" qualifiers="const">
			<return type="PoolColorArray" />
			<description>
			</description>
		</method>
		<method name="get_index" qualifiers="const">
			<return type="int" />
			<argument index="0" name="idx" type="int" />
			<description>
			</description>
		</method>
		<method name="get_indices" qualifiers="const">
			<return type="PoolIntArray" />
			<description>
			</description>
		</method>
		<method name="get_indices_count" qualifiers="const">
			<return type="int" />
			<description>
			</description>
		</method>
		<method name="get_random_ao">
			<return type="float" />
			<argument index="0" name="position" type="Vector2" />
			<description>
			</description>
		</method>
		<method name="get_uv" qualifiers="const">
			<return type="Vector2" />
			<argument index="0" name="idx" type="int" />
			<description>
			</description>
		</method>
		<method name="get_uvs" qualifiers="const">
			<return type="PoolVector2Array" />
			<description>
			</description>
		</method>
		<method name="get_vertex" qualifiers="const">
			<return type="Vector2" />
			<argument index="0" name="idx" type="int" />
			<description>
			</description>
		</method>
		<method name="get_vertex_count" qualifiers="const">
			<return type="int" />
			<description>
			</description>
		</method>
		<method name="get_vertices" qualifiers="const">
			<return type="PoolVector2Array" />
			<description>
			</description>
		</method>
		<method name="remove_doubles">
			<return type="void" />
			<description>
			</description>
		</method>
		<method name="remove_doubles_hashed">
			<return type="void" />
			<description>
			</description>
		</method>
		<method name="remove_index">
			<return type="void" />
			<argument index="0" name="idx" type="int" />
			<description>
			</description>
		</method>
		<method name="remove_vertex">
			<return type="void" />
			<argument index="0" name="idx" type="int" />
			<description>
			</description>
		</method>
		<method name="reset">
			<return type="void" />
			<description>
			</description>
		</method>
		<method name="set_colors">
			<return type="void" />
			<argument index="0" name="values" type="PoolColorArray" />
			<description>
			</description>
		</method>
		<method name="set_indices">
			<return type="void" />
			<argument index="0" name="values" type="PoolIntArray" />
			<description>
			</description>
		</method>
		<method name="set_uvs">
			<return type="void" />
			<argument index="0" name="values" type="PoolVector2Array" />
			<description>
			</description>
		</method>
		<method name="set_vertices">
			<return type="void" />
			<argument index="0" name="values" type="PoolVector2Array" />
			<description>
			</description>
		</method>
		<method name="transform_uv" qualifiers="const">
			<return type="Vector2" />
			<argument index="0" name="uv" type="Vector2" />
			<argument index="1" name="rect" type="Rect2" />
			<description>
			</description>
		</method>
	</methods>
	<members>
		<member name="ao_strength" type="float" setter="set_ao_strength" getter="get_ao_strength" default="0.25">
		</member>
		<member name="base_light_value" type="float" setter="set_base_light_value" getter="get_base_light_value" default="0.5">
		</member>
		<member name="build_flags" type="int" setter="set_build_flags" getter="get_build_flags" default="0">
		</member>
		<member name="format" type="int" setter="set_format" getter="get_format" default="16">
		</member>
		<member name="material" type="Material" setter="set_material" getter="get_material">
		</member>
		<member name="pixels_per_unit" type="float" setter="set_pixels_per_unit" getter="get_pixels_per_unit" default="64.0">
		</member>
		<member name="texture_scale" type="int" setter="set_texture_scale" getter="get_texture_scale" default="1">
		</member>
		<member name="uv_margin" type="Rect2" setter="set_uv_margin" getter="get_uv_margin" default="Rect2( 0, 0, 1, 1 )">
		</member>
		<member name="voxel_scale" type="float" setter="set_voxel_scale" getter="get_voxel_scale" default="1.0">
		</member>
	</members>
	<constants>
	</constants>
</class>
