<?xml version="1.0" encoding="UTF-8" ?>
<class name="VoxelLight" inherits="Reference">
	<brief_description>
		Light used by [VoxelWorld] for baking vertex lights.
	</brief_description>
	<description>
		Light used by [VoxelWorld] for baking vertex lights.
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="get_world_position_x" qualifiers="const">
			<return type="int" />
			<description>
				World position x.
			</description>
		</method>
		<method name="get_world_position_y" qualifiers="const">
			<return type="int" />
			<description>
				World position y.
			</description>
		</method>
		<method name="get_world_position_z" qualifiers="const">
			<return type="int" />
			<description>
				World position z.
			</description>
		</method>
		<method name="set_world_position">
			<return type="void" />
			<argument index="0" name="x" type="int" />
			<argument index="1" name="y" type="int" />
			<argument index="2" name="z" type="int" />
			<description>
				Set world position.
			</description>
		</method>
	</methods>
	<members>
		<member name="light_attenuation" type="float" setter="set_attenuation" getter="get_attenuation" default="0.0">
			The light's attenuation.
		</member>
		<member name="light_color" type="Color" setter="set_color" getter="get_color" default="Color( 0, 0, 0, 1 )">
			The light's color.
		</member>
		<member name="light_energy" type="float" setter="set_energy" getter="get_energy" default="0.0">
			The light's energy.
		</member>
		<member name="light_indirect_energy" type="float" setter="set_indirect_energy" getter="get_indirect_energy" default="0.0">
			The light's indirect energy.
		</member>
		<member name="light_negative" type="bool" setter="set_negative" getter="get_negative" default="false">
			Is the light negative?
		</member>
		<member name="light_range" type="float" setter="set_range" getter="get_range" default="0.0">
			The light's range.
		</member>
		<member name="light_specular" type="float" setter="set_specular" getter="get_specular" default="0.0">
			The light's specular.
		</member>
	</members>
	<constants>
	</constants>
</class>
