// Gradle build config for Pandemonium Engine's Android port.
plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'base'
}

dependencies {
    implementation "androidx.fragment:fragment:$versions.fragmentVersion"
    implementation project(":lib")

    implementation "androidx.window:window:1.2.0"
}

android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools
    ndkVersion versions.ndkVersion

    namespace = "org.pandemoniumengine.editor"

    defaultConfig {
        // The 'applicationId' suffix allows to install Pandemonium 3.x(v3) and 4.x(v4) on the same device
        applicationId "org.pandemoniumengine.editor.v3"
        versionCode getPandemoniumLibraryVersionCode()
        versionName getPandemoniumLibraryVersionName()
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        missingDimensionStrategy 'products', 'editor'
    }

    base {
        archivesName = "android_editor"
    }

    compileOptions {
        sourceCompatibility versions.javaVersion
        targetCompatibility versions.javaVersion
    }

    kotlinOptions {
        jvmTarget = versions.javaVersion
    }

    buildFeatures {
        buildConfig = true
    }

    buildTypes {
        dev {
            initWith debug
            applicationIdSuffix ".dev"
        }

        debug {
            initWith release

            // Need to swap with the release signing config when this is ready for public release.
            signingConfig signingConfigs.debug
        }

        release {
            // This buildtype is disabled below.
            // The editor can't be used with target=release only, as debugging tools are then not
            // included, and it would crash on errors instead of reporting them.
        }
    }

    packagingOptions {
        // 'doNotStrip' is enabled for development within Android Studio
        if (shouldNotStrip()) {
            doNotStrip '**/*.so'
        }
    }

    // Disable 'release' buildtype.
    // The editor can't be used with target=release only, as debugging tools are then not
    // included, and it would crash on errors instead of reporting them.
    variantFilter { variant ->
        if (variant.buildType.name == "release") {
            setIgnore(true)
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def suffix = variant.name == "dev" ? "_dev" : ""
            output.outputFileName = "android_editor${suffix}.apk"
        }
    }
}
